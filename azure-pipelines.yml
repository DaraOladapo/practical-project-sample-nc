trigger:
- master

stages:
  - stage: build
    displayName: 'master-branch-build'

    #build jobs
    jobs: 
      - job: build
        pool:
          vmImage: 'ubuntu-latest'

        variables:
          buildConfiguration: 'Release'

        steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
            feedsToUse: 'select'
        #api
        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '**/*.sln'
            arguments: '--configuration $(BuildConfiguration)'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
        #serviceone
        # - task: DotNetCoreCLI@2
        #   inputs:
        #     command: 'build'
        #     projects: '**/serviceone.csproj'
        #     arguments: '--configuration $(BuildConfiguration)'
        # - task: DotNetCoreCLI@2
        #   inputs:
        #     command: 'publish'
        #     publishWebProjects: true
        #     arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        # - task: PublishBuildArtifacts@1
        #   inputs:
        #     PathtoPublish: '$(build.artifactstagingdirectory)'
        #     ArtifactName: 'drop'
        #     publishLocation: 'Container'

  - stage: release
    displayName: 'deployment-release'
#release job
    jobs:
      - job: release
        pool:
              vmImage: 'ubuntu-latest'
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'specific'
            itemPattern: '**/*.zip'
            downloadPath: '$(System.ArtifactsDirectory)'


        # - task: AzureRmWebAppDeployment@4
        #   inputs:
        #     ConnectionType: 'AzureRM'
        #     azureSubscription: '$(SubsciptionName)($(SubscriptionID))'
        #     appType: 'webApp'
        #     WebAppName: 'appNameHere'
        #     packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'